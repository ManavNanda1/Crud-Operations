//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PracProject.Model.Context
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MN_ProjectEntities : DbContext
    {
        public MN_ProjectEntities()
            : base("name=MN_ProjectEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Country> Country { get; set; }
        public virtual DbSet<department> department { get; set; }
        public virtual DbSet<state> state { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<StudentsTab> StudentsTab { get; set; }
        public virtual DbSet<Options> Options { get; set; }
        public virtual DbSet<Question> Question { get; set; }
        public virtual DbSet<Subjects> Subjects { get; set; }
        public virtual DbSet<Teachers> Teachers { get; set; }
        public virtual DbSet<Quizes> Quizes { get; set; }
    
        public virtual int Sp_Edit_Student(Nullable<int> iD, string fname, string lname, string email, Nullable<System.DateTime> dob, string dept, Nullable<int> country, Nullable<int> state)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("Fname", fname) :
                new ObjectParameter("Fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("Dob", dob) :
                new ObjectParameter("Dob", typeof(System.DateTime));
    
            var deptParameter = dept != null ?
                new ObjectParameter("Dept", dept) :
                new ObjectParameter("Dept", typeof(string));
    
            var countryParameter = country.HasValue ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Edit_Student", iDParameter, fnameParameter, lnameParameter, emailParameter, dobParameter, deptParameter, countryParameter, stateParameter);
        }
    
        public virtual ObjectResult<Sp_GetStudents_Result> Sp_GetStudents()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetStudents_Result>("Sp_GetStudents");
        }
    
        public virtual int Sp_EditTeacher(Nullable<int> iD, string name, string email, string subject, string gender, Nullable<int> country, Nullable<int> state)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var countryParameter = country.HasValue ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_EditTeacher", iDParameter, nameParameter, emailParameter, subjectParameter, genderParameter, countryParameter, stateParameter);
        }
    }
}
